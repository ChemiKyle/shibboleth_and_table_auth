diff --git a/Classes/Authentication.php b/Classes/Authentication.php
index cef0a651..c174c2b5 100644
--- a/Classes/Authentication.php
+++ b/Classes/Authentication.php
@@ -438,30 +438,86 @@ class Authentication
 			} elseif (strlen($GLOBALS['shibboleth_username_field']) > 0) {
 				// Custom username field
 				$userid = $_SESSION['username'] = strtolower($_SERVER[$GLOBALS['shibboleth_username_field']]);
 			} else {
 				// Default value
 				$userid = $_SESSION['username'] = strtolower($_SERVER['REMOTE_USER']);
 			}
 			// Update user's "last login" time if not yet updated for this session (for Shibboleth only since we can't know when users just logged in).
 			// Only do this if coming from outside REDCap.
 			if (!isset($_SERVER['HTTP_REFERER']) || (isset($_SERVER['HTTP_REFERER'])
 				&& substr($_SERVER['HTTP_REFERER'], 0, strlen(APP_PATH_WEBROOT_FULL)) != APP_PATH_WEBROOT_FULL)
 			) {
 				self::setLastLoginTime($userid);
 			}
 		}
+ 		// Shibboleth and table authenitication
+         elseif ($auth_meth == 'shibboleth_table' && ($_GET['action'] != 'passwordreset') ) {
+             // TODO: create user if not exists
+             if(!isset($_SESSION['username']) || $_SESSION['username'] == null) {
+                 if ( $GLOBALS['shibboleth_username_field'] = trim($GLOBALS['shibboleth_username_field']) )
+                 {
+                     if (isDev()) {
+                         // For development purposes only, allow passthru w/o valid authentication
+                         $userid = $_SESSION['username'] = 'taylorr4';
+                     } elseif (strlen($GLOBALS['shibboleth_username_field']) > 0 && $_SERVER[$GLOBALS['shibboleth_username_field']] != null) {
+                         // Does not seem to recognize null
+                         // Custom username field
+                         $userid = $_SESSION['username'] = strtolower($_SERVER[$GLOBALS['shibboleth_username_field']]);
+                     } elseif (strlen($_SERVER['REMOTE_USER']) > 0) {
+                         // Default value
+                         $userid = $_SESSION['username'] = strtolower($_SERVER['REMOTE_USER']);
+ 
+                     } else {
+                         // Choose to login via table even with shib data
+                         $userid = $_POST['username'];
+                         if (self::verifyTableUsernamePassword($userid, $_POST['password']) == 1) {
+                             $_SESSION['username'] = $_POST['username'];
+                         } else {
+                             if ($userid != '') {
+                                 //TODO: check why checkLogin function causes a fatal error here
+                                 print  '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">' . "\n";
+                                 print   RCView::div(array('class'=>'red','style'=>'max-width:100%;width:100%;font-weight:bold;'),
+                                         RCView::img(array('src'=>'exclamation.png')) .
+                                         "{$lang['global_01']}{$lang['colon']} {$lang['config_functions_49']}"
+                                         );
+                             }
+                             loginFunction();
+                         }
+                     }
+                     // Update user's "last login" time if not yet updated for this session (for Shibboleth only since we can't know when users just logged in).
+                     // Only do this if coming from outside REDCap.
+                     if (!isset($_SERVER['HTTP_REFERER']) || (isset($_SERVER['HTTP_REFERER'])
+                                 && substr($_SERVER['HTTP_REFERER'], 0, strlen(APP_PATH_WEBROOT_FULL)) != APP_PATH_WEBROOT_FULL)
+                        ) {
+                         self::setLastLoginTime($userid);
+                     }
+                 } else {
+                     //TODO: What triggers this?
+                     $userid = $_SESSION['username'];
+                     if (!$userid) {
+                         loginFunction();
+                     }
+                 }
+             }
+             else {
+                 $userid = $_SESSION['username'];
+                 if (!$userid) {
+                     loginFunction();
+                 }
+             }
+         }
 		// SAMS authentication (specifically used by the CDC)
 		elseif ($auth_meth == 'sams') {
 			// Hack for development testing
 			// if (isDev() && isset($_GET['sams'])) {
 				// $_SERVER['HTTP_EMAIL'] = 'rob.taylor@vumc.org';
 				// $_SERVER['HTTP_FIRSTNAME'] = 'Rob';
 				// $_SERVER['HTTP_LASTNAME'] = 'Taylor';
 				// $_SERVER['HTTP_USERACCOUNTID'] = '0014787563';
 			// }
 			// Make sure we have all 4 HTTP headers from SAMS
 			$http_headers = get_request_headers();
 			if (isset($_SESSION['redcap_userid']) && !empty($_SESSION['redcap_userid']))
 			{
 				global $project_contact_email;
 				// DEBUGGING: If somehow the userid in the header changes mid-session, end the sessino and email the administrator.
@@ -549,31 +605,31 @@ class Authentication
 		}
 		// Table-based and/or LDAP authentication
 		else {
 			// Set DSN arrays for Table-based auth and/or LDAP auth
 			self::setDSNs();
 			// This variable sets the timeout limit if server activity is idle
 			$autologout_timer = ($autologout_timer == "") ? 0 : $autologout_timer;
 			// In case of users having characters in password that were stripped out earlier, restore them (LDAP only)
 			if (isset($_POST['password'])) $_POST['password'] = html_entity_decode($_POST['password'], ENT_QUOTES);
 			// Check if user is logged in
 			self::checkLogin("", $auth_meth);
 
 			// Set username variable passed from PEAR Auth
 			$userid = strtolower($_SESSION['username']);
 			// Check if table-based user has a temporary password. If so, direct them to page to set it.
-			if ($auth_meth == "table" || $auth_meth == "ldap_table" || ($auth_meth == "aaf_table" && !isset($_SESSION['tli'])))//***<AAF Modification>***
+			if ($auth_meth == "table" || $auth_meth == "ldap_table" || ( $auth_meth == "shibboleth_table") || ($auth_meth == "aaf_table" && !isset($_SESSION['tli'])))//***<AAF Modification>***
 			{
 				$q = db_query("select * from redcap_auth where username = '".db_escape($userid)."'");
 				$isTableBasedUser = db_num_rows($q);
 				// User is table-based user
 				if ($isTableBasedUser)
 				{
 					// Get values from auth table
 					$temp_pwd 					= db_result($q, 0, 'temp_pwd');
 					$password_question 			= db_result($q, 0, 'password_question');
 					$password_answer 			= db_result($q, 0, 'password_answer');
 					$password_question_reminder = db_result($q, 0, 'password_question_reminder');
 					$legacy_hash 				= db_result($q, 0, 'legacy_hash');
 					$hashed_password			= db_result($q, 0, 'password');
 					$password_salt 				= db_result($q, 0, 'password_salt');
 					$password_reset_key			= db_result($q, 0, 'password_reset_key');
@@ -1770,31 +1826,31 @@ class Authentication
 		
 		// Log the failed login
 		Logging::logPageView("LOGIN_FAIL", $failedUsernameEntered);
 
 		$GLOBALS['authFail'] = 0;
 		$a->start();
 		return 1;
 	}
 	
 	// Build and return the DSN array used for Table-based, LDAP-Table, and LDAP authentication
 	public static function buildDsnArray()
 	{
 		global $auth_meth, $mysqldsn, $ldapdsn;
 		$dsn = array();
 		// Auth includes Table
-		if ($auth_meth == "ldap_table" || $auth_meth == "table" || ($auth_meth == "aaf_table" && !isset($_SESSION['tli'])))
+		if ($auth_meth == "ldap_table" || $auth_meth == "table" || ( $auth_meth == "shibboleth_table"  ) || ($auth_meth == "aaf_table" && !isset($_SESSION['tli'])))
         {
             $dsn[] = array('type'=>'DB', 'dsnstuff'=>$mysqldsn);
         }
         // Auth includes LDAP
 		if ($auth_meth == "ldap_table" || $auth_meth == "ldap")
 		{
 			if (is_array(end($ldapdsn))) {
 				// Loop through all LDAP configs and add 
 				foreach ($ldapdsn as $this_ldapdsn) {
 					$dsn[] = array('type'=>'LDAP', 'dsnstuff'=>$this_ldapdsn);
 				}
 			} else {
 				// Add single LDAP config                
 				$dsn[] = array('type'=>'LDAP', 'dsnstuff'=>$ldapdsn);
 			}
@@ -1826,31 +1882,31 @@ class Authentication
 	{
 		global $auth_meth;
 		if (isset($_GET['logout']) && $_GET['logout'])
 		{
 			// Log the logout
 			Logging::logPageView("LOGOUT", $_SESSION['username']);
 			// Destroy session and erase userid
 			$_SESSION = array();
 			session_unset();
 			session_destroy();
 			deletecookie('PHPSESSID');
 			// Default value (remove 'logout' from query string, if exists)
 			$logoutRedirect = str_replace(array("logout=1&","&logout=1","logout=1","&amp;"), array("","","","&"), $_SERVER['REQUEST_URI']);
 			if (substr($logoutRedirect, -1) == '&' || substr($logoutRedirect, -1) == '?') $logoutRedirect = substr($logoutRedirect, 0, -1);
 			// If using Shibboleth, redirect to Shibboleth logout page
-			if ($auth_meth == 'shibboleth' && strlen($GLOBALS['shibboleth_logout']) > 0) {
+			if ( ( $auth_meth == 'shibboleth_table' || $auth_meth == 'shibboleth' ) && strlen($GLOBALS['shibboleth_logout']) > 0) {
 				$logoutRedirect = $GLOBALS['shibboleth_logout'];
 			}
 			// If using SAMS, redirect to SAMS logout page
 			elseif ($auth_meth == 'sams' && strlen($GLOBALS['sams_logout']) > 0) {
 				$logoutRedirect = $GLOBALS['sams_logout'];
 			}
 			// Reload same page or redirect to login page
 			redirect($logoutRedirect);
 		}
 	}
 
 
 	/**
 	 * SEARCH REDCAP_AUTH TABLE FOR USER (return boolean)
 	 */
diff --git a/Config/init_functions.php b/Config/init_functions.php
index e799823a..ad30a187 100644
--- a/Config/init_functions.php
+++ b/Config/init_functions.php
@@ -454,31 +454,172 @@ function loginFunction()
 			<!-- nav tabs -->
 			<ul class="nav nav-tabs" role="tablist">
 				<li role="presentation" class="nav-item"><a href="#inst-login" class="nav-link active" data-toggle="tab" aria-controls="inst-login" role="tab" data-toggle="tab">Institutional login</a>
 				</li>
 				<li role="presentation" class="nav-item"><a href="#non-inst-login" class="nav-link" data-toggle="tab" aria-controls="non-inst-login" role="tab" data-toggle="tab">Non institutional login</a>
 				</li>
 			</ul>
 
 			<!-- tab panes -->
 			<div class="tab-content">
 				<div role="tabpanel" class="tab-pane active" id="inst-login">
 					<p>If your institution (for example an Australian University, Health or research institution) is a member of the Australian Access Federation click on the AAF graphic below.</p>
 					<p><a href='<?php echo $GLOBALS['aafAccessUrl']; ?>'><img src='https://rapid.aaf.edu.au/aaf_service_223x54.png'/></a></p>
 				</div>
 				<div role="tabpanel" class="tab-pane" id="non-inst-login">
-					<p>If you aren't a member of the Australian Access Federation, fill in your login details below.</p>
+					<p>If you aren&#39;t a member of the Australian Access Federation, fill in your login details below.</p>
+		<?php
+	}
+	if ($auth_meth == 'shibboleth_table')
+	{
+        $shibboleth_table_config = json_decode($GLOBALS['shibboleth_table_config'], TRUE);
+        $first_shib_data = $shibboleth_table_config['institutions'][0];
+
+        ?>
+        <div>
+            <!-- nav tabs -->
+            <style>
+                .nav-tabs {
+                    background-color: #f8f8f8;
+                    padding: none;
+                }
+                .nav-tabs a {
+                    padding: 10px;
+                    text-decoration: none !important;
+                    display: block;
+                }
+                .nav-tabs li a:hover {
+                    text-decoration: none !important;
+                }
+                .nav-tabs li:hover a:hover {
+                background-color: #e7e7e7;
+                }
+
+                /* The following modifiers would be redundant with the JS below
+                but the li element for the default login must be selected
+                li:active, a:active {
+                background-color: #e7e7e7;
+                }
+                li:focus, a:focus {
+                background-color: #e7e7e7;
+                }
+                */
+                /* The CSS relational pseudo-class "has" is not enabled yet
+                once usable, it can replace the CSS altering js functions below
+                .active li:has(> a[aria-selected="true"]) {
+                background-color: #e7e7e7;
+                }
+                */
+            </style>
+
+            <script>
+            const shibTableConfig = <?php echo $GLOBALS["shibboleth_table_config"]; ?>;
+            const defaultShibUrl = '<?php echo $_SERVER['Shib-Handler'] . "/Login?target=" . $_SERVER['REQUEST_URI']; ?>';
+            const repeatShibParams = shibTableConfig.institutions;
+            const shibIdPs = repeatShibParams.length;
+
+            function appendShibOptions() {
+                // Fill the login pane for each Shibboleth login option
+                for (let i = 1; i < shibIdPs; i++) {
+                    const thisShib = repeatShibParams[i];
+
+                    // Fill the tab selectors for each Shibboleth login option
+                    const text = thisShib['login_option'];
+                    const tabOption = $('#shib_login_tab' + (i - 1)).last();
+                    var nextTabOption = tabOption.clone();
+                    nextTabOption.insertAfter(tabOption);
+                    nextTabOption.attr('id', 'shib_login_tab' + i);
+                    nextTabOption.find('a').text(text)
+                                 .attr('href', '#inst-login' + i)
+                                 .attr('aria-controls', 'inst-login' + i);
+
+                    // Remove the tab title data to not clash with appendShibPaneOptions
+                    delete thisShib['login_option'];
+
+                    // Handle panes
+                    const paneOption = $('#inst-login0.tab-pane');
+                    var nextPaneOption = paneOption.clone();
+                    nextPaneOption.insertAfter(paneOption);
+                    nextPaneOption.attr('id', 'inst-login' + i);
+
+                    for (const param of Object.keys(thisShib)) {
+                        const paramValue = thisShib[param];
+                        let paramTargetElement = nextPaneOption.find('#' + param);
+                        switch(param) {
+                            case 'login_text':
+                                paramTargetElement.text(paramValue);
+                                break;
+                            case 'login_url':
+                                paramTargetElement.attr('href', (paramValue !== '') ? paramValue : defaultShibUrl);
+                                break;
+                            case 'login_image':
+                                paramTargetElement.attr('src', paramValue);
+                                break;
+                            default:
+                                paramTargetElement.text(paramValue);
+                        }
+                    }
+                }
+            }
+
+            $(document).ready(function() {
+                appendShibOptions();
+
+                // Activate login pane according to default
+                const defaultSelection = '<?php echo $shibboleth_table_config['splash_default']; ?>';
+                document.getElementById(defaultSelection)
+                        .setAttribute('class', 'tab-pane active');
+                // Add selected styling to li element for default
+                document.querySelector('[aria-controls="' + defaultSelection + '"]')
+                        // .setAttribute('aria-selected', 'true'); // this is set on click but appears to do nothing; prevents function chaining
+                        .parentElement.setAttribute('style', 'background-color: #e7e7e7; text-decoration: none;');
+                //  TODO: change the above to pure css now that the element properties are being updated in js
+
+                // Change tab appearance after click
+                $('.nav li').on('click', function(event) {
+                    $('.nav li').css('background-color','#f8f8f8');
+                    $(this).css('background-color','#e7e7e7');
+                });
+            });
+            </script>
+
+			<ul class="nav nav-tabs" role="tablist">
+                <li role="presentation" class="active">
+                    <a href="#non-inst-login" aria-controls="non-inst-login" role="tab" data-toggle="tab">
+                        <?php echo $shibboleth_table_config['table_login_option']; ?>
+                    </a>
+                </li>
+                <li role="presentation" class="active" id="shib_login_tab0">
+                    <a href="#inst-login0" aria-controls="inst-login0" role="tab" data-toggle="tab">
+                        <?php echo $first_shib_data['login_option']; ?>
+                    </a>
+                </li>
+			</ul>
+
+			<!-- tab panes -->
+			<div class="tab-content">
+				<div role="tabpanel" class="tab-pane" id="inst-login0">
+                    <p id='login_text'>
+                        <?php echo $first_shib_data['login_text']; ?>
+                    </p>
+                    <p>
+                        <a id='login_url' href='<?php echo ( $first_shib_data['login_url'] ) ?: $_SERVER['Shib-Handler'] . '/Login?target=' . $_SERVER['REQUEST_URI']; ?>'>
+                            <img id='login_image' src='<?php echo $first_shib_data['login_image']; ?>'/>
+                        </a>
+                    </p>
+                </div>
+				<div role="tabpanel" class="tab-pane" id="non-inst-login">
 		<?php
 	}
 
 	// Login instructions (default)
 	print  "<p style='font-size:13px;'>
 				{$lang['config_functions_67']}
 				<a style='font-size:13px;text-decoration:underline;' href=\"".
 				(trim($homepage_contact_url) == '' ? "mailto:$homepage_contact_email" : trim($homepage_contact_url)) .
 				"\">$homepage_contact</a>{$lang['period']}
 			</p>
 			<br>";
 
 	// Sanitize action URL for login form
 	$loginFormActionUrl = js_escape(str_replace('`', '', $_SERVER['REQUEST_URI']));
 	// Give extra room for non-English languages
diff --git a/ControlCenter/create_user.php b/ControlCenter/create_user.php
index 6bc37b57..a7c0e2d3 100644
--- a/ControlCenter/create_user.php
+++ b/ControlCenter/create_user.php
@@ -157,31 +157,31 @@ if (isset($_POST['username']) && isset($_POST['user_firstname']) && isset($_POST
 }
 
 
 
 
 // Page header, instructions, and tabs
 if ($ui_id) {
 	// Edit user info
 	print RCView::h4(array('style'=>'margin-top:0;'), $lang['control_center_239']) .
 		  RCView::p(array(), $lang['control_center_244']);
 } else {
 	// Add new user
 	print 	RCView::h4(array('style' => 'margin-top: 0;'), $lang['control_center_4427']) .
 			RCView::p(array('style'=>'margin-bottom:20px;'), $lang['control_center_411']);
 	// If not using auth_meth of none, table, or ldap_table, the don't display page
-	if (!in_array($auth_meth_global, array('none', 'table', 'ldap_table','aaf_table'))) { //***<AAF Modification>***
+	if (!in_array($auth_meth_global, array('none', 'table', 'ldap_table','aaf_table', 'shibboleth_table'))) { //***<AAF Modification>***
 		print 	RCView::p(array('class'=>'yellow', 'style'=>'margin-bottom:20px;'),
 					RCView::img(array('src'=>'exclamation_orange.png')) .
 					RCView::b($lang['global_03'].$lang['colon'])." " .$lang['control_center_4401']
 				);
 		include 'footer.php';
 		exit;
 	}
 	// Display dashboard of table-based users that are on the old MD5 password hashing.
 	print User::renderDashboardPasswordHashProgress();
 	// Tabs
 	$tabs = array('ControlCenter/create_user.php'=>'<i class="fas fa-user-plus" style="padding-bottom: 3px;"></i> ' . $lang['control_center_409'],
 				  'ControlCenter/create_user_bulk.php'=>RCView::img(array('src'=>'xls2.png')) . $lang['control_center_410']);
 	RCView::renderTabs($tabs);
 	print 	RCView::p(array(), $lang['control_center_43']);
 }
diff --git a/ControlCenter/header.php b/ControlCenter/header.php
index e7c063ec..ce054a72 100644
--- a/ControlCenter/header.php
+++ b/ControlCenter/header.php
@@ -73,31 +73,31 @@ hr { border-top: 1px solid #ccc; }
 <div class="row">
 
 	<?php	
 	// Get count of pending To-Do List items
 	$todoListItemsPending = ToDoList::getTotalNumberRequestsByStatus('pending') + ToDoList::getTotalNumberRequestsByStatus('low-priority');
 	$todoListItemsPendingBadge = ($todoListItemsPending > 0) ? " <span class='badgerc'>$todoListItemsPending</span>" : "";
 	?>
 
 	<div id="control_center_menu" class="d-none d-md-block col-md-4 col-lg-3" role="navigation">
 		
 		<!-- ACCOUNT MANAGER TOOLS -->
 		<?php if (ACCOUNT_MANAGER) { ?>
 		<div class="cc_menu_section">
 			<div class="cc_menu_header"><?php echo $lang['control_center_4581'] ?></div>
 			<div class="cc_menu_item"><img src="<?php echo APP_PATH_IMAGES ?>users3.png">&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/view_users.php"><?php echo $lang['control_center_109'] ?></a></div>
-			<?php if (in_array($auth_meth_global, array('none', 'table', 'ldap_table','aaf_table'))) { ?>
+			<?php if (in_array($auth_meth_global, array('none', 'table', 'ldap_table','aaf_table','shibboleth_table'))) { ?>
 				<div class="cc_menu_item"><img src="<?php echo APP_PATH_IMAGES ?>user_add3.png">&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/create_user.php"><?php echo $lang['control_center_4570'] ?></a></div>
 			<?php } ?>
 			<div class="cc_menu_item"><img src="<?php echo APP_PATH_IMAGES ?>user_list.png">&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/user_white_list.php"><?php echo $lang['control_center_162'] ?></a></div>
 			<div class="cc_menu_item"><img src="<?php echo APP_PATH_IMAGES ?>email_go.png">&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/email_users.php"><?php echo $lang['email_users_02'] ?></a></div>
 		</div>
 		<?php } else { ?>
 		
 		<!-- REDCap Home Page and My Projects links (mobile view only) -->
 		<div class="cc_menu_section d-block d-sm-none col-12">
 			<div class="cc_menu_item"><i class='fas fa-home'></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT_PARENT ?>"><?php echo $lang['control_center_4531'] ?></a></div>
 			<div class="cc_menu_item"><i class="far fa-list-alt"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT_PARENT ?>index.php?action=myprojects"><?php echo $lang['home_22'] ?></a></div>
             <div class="cc_menu_divider"></div>
         </div>
 		
 		<!-- Control Center Home -->
@@ -132,31 +132,31 @@ hr { border-top: 1px solid #ccc; }
 		<div class="cc_menu_divider"></div>
 		
 		<!-- Projects -->
 		<div class="cc_menu_section">
 			<div class="cc_menu_header"><?php echo $lang['control_center_134'] ?></div>
 			<div class="cc_menu_item"><i class="fas fa-layer-group"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/view_projects.php"><?php echo $lang['control_center_110'] ?></a></div>
             <div class="cc_menu_item"><i class="fas fa-edit" style="margin-left:1px;margin-right:1px;"></i> <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/edit_project.php"><?php echo $lang['control_center_4396'] ?></a></div>
             <div class="cc_menu_item"><i class="fas fa-link"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/survey_link_lookup.php"><?php echo $lang['control_center_4702'] ?></a></div>
         </div>
         <div class="cc_menu_divider"></div>
 		
 		<!-- Users -->
 		<div class="cc_menu_section">
 			<div class="cc_menu_header"><?php echo $lang['control_center_132'] ?></div>
 			<div class="cc_menu_item"><i class="fas fa-user-friends"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/view_users.php"><?php echo $lang['control_center_109'] ?></a></div>
-			<?php if (in_array($auth_meth_global, array('none', 'table', 'ldap_table','aaf_table'))) { ?>
+			<?php if (in_array($auth_meth_global, array('none', 'table', 'ldap_table','aaf_table','shibboleth_table'))) { ?>
 				<div class="cc_menu_item"><i class="fas fa-user-plus"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/create_user.php"><?php echo $lang['control_center_4570'] ?></a></div>
 			<?php } ?>
 			<div class="cc_menu_item"><i class="fas fa-user-check"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/user_white_list.php"><?php echo $lang['control_center_162'] ?></a></div>
 			<div class="cc_menu_item"><i class="fas fa-envelope"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/email_users.php"><?php echo $lang['email_users_02'] ?></a></div>
 			<div class="cc_menu_item"><i class="fas fa-coins"></i>&nbsp; <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/user_api_tokens.php"><?php echo $lang['control_center_245'] ?></a></div>
 			<div class="cc_menu_item"><i class="fas fa-user-shield"></i> <a href="<?php echo APP_PATH_WEBROOT ?>ControlCenter/superusers.php"><?php echo $lang['control_center_4572'] ?></a></div>
 		</div>
 		<div class="cc_menu_divider"></div>
 		
 		<!-- Technical / Developer Tools -->
 		<div class="cc_menu_section">
 			<div class="cc_menu_header"><?php echo $lang['control_center_442'] ?></div>
 			<?php if (defined("APP_URL_EXTMOD")) { ?>
 				<div class="cc_menu_item"><i class="fas fa-cube fs14" style="margin-left:2px;margin-right:2px;"></i>&nbsp;<a href="<?php echo APP_URL_EXTMOD ?>manager/control_center.php"><?php echo $lang['global_142'] ?></a></div>
 			<?php } ?>
diff --git a/ControlCenter/security_settings.php b/ControlCenter/security_settings.php
index c2e11cf6..3e243304 100644
--- a/ControlCenter/security_settings.php
+++ b/ControlCenter/security_settings.php
@@ -9,30 +9,31 @@ if (!SUPER_USER) redirect(APP_PATH_WEBROOT);
 
 $changesSaved = false;
 
 // If project default values were changed, update redcap_config table with new values
 if ($_SERVER['REQUEST_METHOD'] == 'POST')
 {
 	// Change checkbox "on" value to 0 or 1
 	$_POST['two_factor_auth_ip_range_include_private'] = (isset($_POST['two_factor_auth_ip_range_include_private']) && $_POST['two_factor_auth_ip_range_include_private'] == 'on') ? '1' : '0';
 	// Remove spaces and line breaks. Replace any semi-colons with commas.
 	$_POST['two_factor_auth_ip_range'] = str_replace(array(";", "\r", "\n", "\t", " "), array(",", "", "", "", ""), $_POST['two_factor_auth_ip_range']);
 	$_POST['two_factor_auth_ip_range_alt'] = str_replace(array(";", "\r", "\n", "\t", " "), array(",", "", "", "", ""), $_POST['two_factor_auth_ip_range_alt']);
 	// Loop
 	$changes_log = array();
 	$sql_all = array();
 	foreach ($_POST as $this_field=>$this_value) {
+        $this_value = (is_array($this_value) ? json_encode($this_value) : $this_value );
 		// Save this individual field value
 		$sql = "UPDATE redcap_config SET value = '".db_escape($this_value)."' WHERE field_name = '$this_field'";
 		$q = db_query($sql);
 
 		// Log changes (if change was made)
 		if ($q && db_affected_rows() > 0) {
 			$sql_all[] = $sql;
 			$changes_log[] = "$this_field = '$this_value'";
 		}
 	}
 
 	// Log any changes in log_event table
 	if (count($changes_log) > 0) {
 		Logging::logEvent(implode(";\n",$sql_all),"redcap_config","MANAGE","",implode(",\n",$changes_log),"Modify system configuration");
 	}
@@ -144,30 +145,31 @@ print "<input type='hidden' name='redcap_csrf_token' value='".System::getCsrfTok
 		</div>
 	</td>
 	<td class="cc_data">
 		<select class="x-form-text x-form-field" style="" name="auth_meth_global">
 			<option value='none' <?php echo ($element_data['auth_meth_global'] == "none" ? "selected" : "") ?>><?php echo $lang['system_config_08'] ?></option>
 			<option value='table' <?php echo ($element_data['auth_meth_global'] == "table" ? "selected" : "") ?>><?php echo $lang['system_config_09'] ?></option>
 			<option value='ldap' <?php echo ($element_data['auth_meth_global'] == "ldap" ? "selected" : "") ?>>LDAP</option>
 			<option value='ldap_table' <?php echo ($element_data['auth_meth_global'] == "ldap_table" ? "selected" : "") ?>>LDAP & <?php echo $lang['system_config_09'] ?></option>
 			<option value='shibboleth' <?php echo ($element_data['auth_meth_global'] == "shibboleth" ? "selected" : "") ?>>Shibboleth <?php echo $lang['system_config_251'] ?></option>
 			<option value='openid_google' <?php echo ($element_data['auth_meth_global'] == "openid_google" ? "selected" : "") ?>>Google OAuth2 <?php echo $lang['system_config_251'] ?></option>
 			<option value='rsa' <?php echo ($element_data['auth_meth_global'] == "rsa" ? "selected" : "") ?>>RSA SecurID (two-factor authentication)</option>
 			<option value='openid' <?php echo ($element_data['auth_meth_global'] == "openid" ? "selected" : "") ?>>OpenID <?php echo $lang['system_config_251'] ?></option>
 			<option value='sams' <?php echo ($element_data['auth_meth_global'] == "sams" ? "selected" : "") ?>>SAMS (for CDC)</option>
 		    <option value='aaf' <?php echo ($element_data['auth_meth_global'] == "aaf" ? "selected" : "") ?>>AAF (Australian Access Federation)</option>
 			<option value='aaf_table' <?php echo ($element_data['auth_meth_global'] == "aaf_table" ? "selected" : "") ?>>AAF (Australian Access Federation) & <?php echo $lang['system_config_09'] ?></option>
+			<option value='shibboleth_table' <?php echo ($element_data['auth_meth_global'] == "shibboleth_table" ? "selected" : "") ?>>Shibboleth & <?php echo $lang['system_config_09'] ?></option>
         </select>
 		<div class="cc_info" style="font-weight:normal;">
 			<?php echo $lang['system_config_222'] ?>
 			<a href="https://community.projectredcap.org/articles/691/authentication-how-to-change-and-set-up-authentica.html" target="_blank" style="text-decoration:underline;"><?php echo $lang['system_config_223'] ?></a><?php echo $lang['system_config_224'] ?>
 		</div>
 		<div class="cc_info">
 			<a href="<?php echo APP_PATH_WEBROOT . "ControlCenter/ldap_troubleshoot.php" ?>" style="color:#800000;text-decoration:underline;"><?php echo $lang['control_center_317'] ?></a>
 		</div>
 	</td>
 </tr>
 
 
 <!-- Two Factor Auth Settings -->
 <tr>
 	<td colspan="2">
@@ -637,62 +639,275 @@ print "<input type='hidden' name='redcap_csrf_token' value='".System::getCsrfTok
 			(e.g., Yahoo, MyOpenID)
 		</div>
 	</td>
 </tr>
 <tr>
 	<td class="cc_label"><?php echo $lang['system_config_247'] ?></td>
 	<td class="cc_data">
 		<input class='x-form-text x-form-field'  type='text' name='openid_provider_url' value='<?php echo htmlspecialchars($element_data['openid_provider_url'], ENT_QUOTES) ?>'  /><br/>
 		<div class="cc_info">
 			<?php echo $lang['system_config_249'] ?>
 		</div>
 	</td>
 </tr>
 
 <!-- Additional Shibboleth Authentication Settings -->
+<script>
+// Allow entry of custom values in a dropdown menu
+// if a value is entered that is not in $_SERVER, behavior will default to "None"
+// adapted from https://stackoverflow.com/a/20532400
+// TODO: use $lang in place of hardcoded English text
+(function ($) {
+
+    $.fn.otherize = function (option_text, texts_placeholder_text) {
+        oSel = $(this);
+        option_id = oSel.attr('id') + '_other';
+        textbox_id = option_id + "_tb";
+
+        this.append("<option value='' id='" + option_id + "' class='otherize' >" + option_text + "</option>");
+        this.after("<input type='text' id='" + textbox_id + "' style='display: none; border-bottom: 1px solid black' placeholder='" + texts_placeholder_text + "'/>");
+        this.change(
+
+        function () {
+            oTbox = oSel.parent().children('#' + textbox_id);
+            oSel.children(':selected').hasClass('otherize') ? oTbox.show() : oTbox.hide();
+        });
+
+        $("#" + textbox_id).change(
+
+        function () {
+            $("#" + option_id).val($("#" + textbox_id).val());
+        });
+    };
+
+    $.fn.fillShibuserVal = function (selected_option) {
+        var presets = ['none', 'REMOTE_USER', 'HTTP_REMOTE_USER', 'HTTP_AUTH_USER', 'HTTP_SHIB_EDUPERSON_PRINCIPAL_NAME','Shib-EduPerson-Principal-Name']; 
+        if (!presets.includes(selected_option)) {
+            var custom_option = (`<option value='${selected_option}' selected>${selected_option}</option>`);
+            this.append(custom_option);
+        };
+    };
+
+}(jQuery));
+
+$(function () {
+    // passing $GLOBALS['shibboleth_username_field'] here results in the previous value being displayed until the page is navigated to again
+    // this may be due to $GLOBALS being processed "just-in-time" which is after the DOM has loaded
+    $("#otherize").fillShibuserVal('<?php echo js_escape($element_data['shibboleth_username_field']); ?>');
+
+    $("#otherize").otherize("other", "Enter your own");
+});
+</script>
+
+
 <tr>
 	<td colspan="2">
 		<hr size=1>
 		<h4 style="font-size:14px;padding:0 10px;color:#800000;"><?php echo $lang['system_config_158'] ?></h4>
 	</td>
 </tr>
 <tr  id="shibboleth_username_field-tr" sq_id="shibboleth_username_field">
 	<td class="cc_label"><?php echo $lang['system_config_44'] ?></td>
 	<td class="cc_data">
-		<select class="x-form-text x-form-field" style="" name="shibboleth_username_field">
+		<select id="otherize" class="x-form-text x-form-field" style="" name="shibboleth_username_field">
 			<option value='none' <?php echo ($element_data['shibboleth_username_field'] == "none" ? "selected" : "") ?>><?php echo $lang['system_config_45'] ?></option>
 			<option value='REMOTE_USER' <?php echo ($element_data['shibboleth_username_field'] == "REMOTE_USER" ? "selected" : "") ?>>REMOTE_USER</option>
 			<option value='HTTP_REMOTE_USER' <?php echo ($element_data['shibboleth_username_field'] == "HTTP_REMOTE_USER" ? "selected" : "") ?>>HTTP_REMOTE_USER</option>
 			<option value='HTTP_AUTH_USER' <?php echo ($element_data['shibboleth_username_field'] == "HTTP_AUTH_USER" ? "selected" : "") ?>>HTTP_AUTH_USER</option>
 			<option value='HTTP_SHIB_EDUPERSON_PRINCIPAL_NAME' <?php echo ($element_data['shibboleth_username_field'] == "HTTP_SHIB_EDUPERSON_PRINCIPAL_NAME" ? "selected" : "") ?>>HTTP_SHIB_EDUPERSON_PRINCIPAL_NAME</option>
 			<option value='Shib-EduPerson-Principal-Name' <?php echo ($element_data['shibboleth_username_field'] == "Shib-EduPerson-Principal-Name" ? "selected" : "") ?>>Shib-EduPerson-Principal-Name</option>
 		</select><br/>
 		<div class="cc_info">
 			<?php echo $lang['system_config_324'] ?>
 		</div>
 	</td>
 </tr>
 <tr  id="shibboleth_logout-tr" sq_id="shibboleth_logout">
 	<td class="cc_label"><?php echo $lang['system_config_46'] ?></td>
 	<td class="cc_data">
 		<input class='x-form-text x-form-field '  type='text' name='shibboleth_logout' value='<?php echo htmlspecialchars($element_data['shibboleth_logout'], ENT_QUOTES) ?>'  /><br/>
 		<div class="cc_info">
 			<?php echo $lang['system_config_47'] ?>
 		</div>
 	</td>
 </tr>
 
+<!-- Shibboleth & Table Authentication Settings -->
+
+<?php
+    $shibboleth_table_config = json_decode($element_data['shibboleth_table_config'], TRUE);
+    $IdPData = $shibboleth_table_config['institutions'][0];
+?>
+
+<script>
+    const shibTableConfig = <?php echo $element_data["shibboleth_table_config"]; ?>;
+    const repeatShibParams = shibTableConfig.institutions;
+
+    // Append additional IdP options to dropdown
+    // TODO: if 'inst-login1' is set as default, 'inst-login<LAST>' will end up being set on page load due to $.clone
+    function appendDropdown(index) {
+        const prevEntry = $('[value="inst-login' + (index - 1) + '"]').last();
+        var newEntry = prevEntry.clone();
+        newEntry.insertAfter(prevEntry);
+        newEntry.text(repeatShibParams[index]['login_option'])
+                .attr('value', 'inst-login' + index);
+    }
+
+</script>
+
+<tr>
+       <td colspan="2">
+               <hr size=1>
+               <h4 style="font-size:14px;padding:0 10px;color:#800000;"><?php echo "Shibboleth & Table Splash Page Customization:"; /*TODO: use $lang */ ?></h4>
+       </td>
+</tr>
+<tr>
+        <td class="cc_label"><?php echo 'Default login method'; /*$lang['system_config_xyz]*/ ?></td>
+        <td class="cc_data">
+                <select class="x-form-text x-form-field" style="" name="shibboleth_table_config[splash_default]">
+                        <option value='non-inst-login' <?php echo ($shibboleth_table_config['splash_default'] == 'non-inst-login') ? "selected" : "" ?>><?php echo 'Table' /*$lang['design_100']*/ ?></option>
+                                                                                                                                                                             <option value='inst-login0' <?php echo ($shibboleth_table_config['splash_default'] == 'inst-login0') ? "selected" : "" ?>><?php echo $IdPData['login_option']; /*$lang['design_99']*/ ?></option>
+                </select><br/>
+        </td>
+</tr>
+<tr  id="shibboleth_table_table_login_option-tr" sq_id="shibboleth_table_table_login_option">
+    <td class="cc_label"><?php echo 'Table login selection title' /* TODO: $lang */ ?></td>
+    <td class="cc_data">
+        <input class='x-form-text x-form-field '  type='text' name='shibboleth_table_config[table_login_option]' value='<?php echo htmlspecialchars($shibboleth_table_config['table_login_option'], ENT_QUOTES) ?>'  /><br/>
+        <div class="cc_info">
+            <?php echo 'Clickable text to use table-based login'; /* TODO: $lang */?>
+        </div>
+    </td>
+</tr>
+
+
+<!-- Repeat for Multiple IdPs -->
+
+<script>
+      $(document).ready(function() {
+
+          $(document).on('click', '.addIdP', function(event) {
+              event.preventDefault();
+              appendIdPOptions(true, $('.repeatingIdP').length - 1);
+          });
+
+          $(document).on('click', '.deleteIdP', function(event) {
+              event.preventDefault();
+              $(this).parents('tbody').fadeOut('normal', function () { $(this).remove(); });
+          });
+
+          function populateData() {
+              const numIdPs = repeatShibParams.length;
+              for (let i = 1; i < numIdPs; i++) {
+                  appendIdPOptions(false, i - 1);
+                  appendDropdown(i);
+              }
+          }
+          populateData();
+
+          function appendIdPOptions(userCreated = false, lastIdPIndex = null) {
+              var prevEntry = $('.repeatingIdP').last();
+              if (lastIdPIndex === 0) {
+                  // Only allow IdP deletion with >1 IdP entries
+                  $(prevEntry).find('.addIdP').after('<button class="deleteIdP">Delete This IdP</button>');
+              }
+              var newEntry = prevEntry.clone();
+              prevEntry.find('.addIdP').remove();
+              newEntry.insertAfter(prevEntry);
+
+              if (userCreated) {
+                  const lastIdPIndex = $('.repeatingIdP').length - 1;
+              }
+              const newIdPIndex = lastIdPIndex + 1;
+
+              // Increment indices and blank inputs
+              newEntry.find('input').each(function(name, input) {
+                  input.name = input.name.replace("[" + lastIdPIndex + "]", "[" + newIdPIndex + "]");
+                  const inputParam = input.name.split('[').pop().slice(0, -1);
+                  if (!userCreated) {
+                    try {
+                        input.value = repeatShibParams[newIdPIndex][inputParam];
+                    } catch (err) {
+                        input.value = '';
+                    }
+                  } else {
+                      input.value = '';
+                  }
+              });
+
+              if (userCreated) {
+                  newEntry.hide()
+                          .effect("highlight", {color: '#ffedc9'}, 1000);
+              }
+          }
+
+      });
+</script>
+
+
+<tbody class="repeatingIdP">
+            <tr>
+                 <td colspan="2">
+                            <hr size=1>
+                                    <h4 style="font-size:14px;padding:0 10px;color:#800000;"><?php echo "Shibboleth Login Options"; /*TODO: use $lang */ ?></h4>
+                 </td>
+</tr>
+<tr  id="shibboleth_table_shibboleth_login_option-tr" sq_id="shibboleth_table_shibboleth_login_option">
+       <td class="cc_label"><?php echo 'Shibboleth login selection title' /* TODO: $lang */ ?></td>
+       <td class="cc_data">
+               <input class='x-form-text x-form-field '  type='text' name='shibboleth_table_config[institutions][0][login_option]' value='<?php echo htmlspecialchars($IdPData['login_option'], ENT_QUOTES) ?>'  /><br/>
+               <div class="cc_info">
+                       <?php echo 'Clickable text to use Shibboleth login'; /* TODO: $lang */?>
+               </div>
+       </td>
+</tr>
+<tr  id="shibboleth_table_shibboleth_login_text-tr" sq_id="shibboleth_table_shibboleth_login_text">
+       <td class="cc_label"><?php echo 'Shibboleth login descriptive text' /* TODO: $lang */ ?></td>
+       <td class="cc_data">
+               <input class='x-form-text x-form-field '  type='text' name='shibboleth_table_config[institutions][0][login_text]' value='<?php echo htmlspecialchars($IdPData['login_text'], ENT_QUOTES) ?>'  /><br/>
+               <div class="cc_info">
+                       <?php echo 'Descriptive text displayed with Shibboleth login'; /* TODO: $lang */?>
+               </div>
+       </td>
+</tr>
+<tr  id="shibboleth_table_login_image-tr" sq_id="shibboleth_table_login_image">
+       <td class="cc_label"><?php echo 'Shibboleth Link Image URL' /* TODO: $lang */ ?></td>
+       <td class="cc_data">
+               <input class='x-form-text x-form-field '  type='text' name='shibboleth_table_config[institutions][0][login_image]' value='<?php echo htmlspecialchars($IdPData['login_image'], ENT_QUOTES) ?>'  /><br/>
+               <div class="cc_info">
+                       <?php echo "URL for image to be displayed to link to server's Shibboleth login"; /*TODO: $lang */ ?>
+               </div>
+       </td>
+</tr>
+<tr  id="shibboleth_table_shibboleth_login_url-tr" sq_id="shibboleth_table_shibboleth_login_url">
+    <td class="cc_label"><?php echo "URL for Shibboleth IdP"/* TODO: $lang['system_config_46'] */ ?></td>
+    <td class="cc_data">
+        <input class='x-form-text x-form-field '  type='text' name='shibboleth_table_config[institutions][0][login_url]' value='<?php echo htmlspecialchars($IdPData['login_url'], ENT_QUOTES) ?>'  /><br/>
+        <div class="cc_info">
+            <?php echo $lang['system_config_47'] ?>
+        </div>
+    </td>
+</tr>
+
+<tr>
+    <td class="cc_label"><?php echo "Additional IdP Controls"/* TODO: $lang['system_config_46'] */ ?></td>
+    <td class="cc_data">
+        <button class='addIdP'>Add IdP</button>
+    </td>
+</tr>
+</tbody>
+<!-- End Repeat for Multiple IdPs -->
 
 <!--***<AAF Modification>***-->
 <tr>
         <td colspan="2">
                 <hr size=1>
                 <h4 style="font-size:14px;padding:0 10px;color:#800000;"><?php echo $lang['system_config_552'] ?></h4>
         </td>
 </tr>
 
 <tr  id="aafAccessUrl-tr" sq_id="aafAccessUrl">
         <td class="cc_label"><?php echo $lang['system_config_553'] ?></td>
         <td class="cc_data">
                 <input class='x-form-text x-form-field' type='text' name='aafAccessUrl' value='<?php echo htmlspecialchars($element_data['aafAccessUrl'], ENT_QUOTES) ?>' id='aafAnch'/><br/>
                 <div class="cc_info">
                         <?php echo $lang['system_config_562'] ?>
diff --git a/Resources/sql/upgrade_include_shib_table.php b/Resources/sql/upgrade_include_shib_table.php
new file mode 100644
index 00000000..e0231b70
--- /dev/null
+++ b/Resources/sql/upgrade_include_shib_table.php
@@ -0,0 +1,10 @@
+<?php
+
+//Initialize default Shibboleth IdP entry for Shibboleth & Table Auth
+$sql = "
+INSERT INTO redcap_config(field_name,value) VALUES
+('shibboleth_table_config', '{\"splash_default\":\"non-inst-login\",\"table_login_option\":\"Use local REDCap login\",\"institutions\":[{\"login_option\":\"Shibboleth Login\",\"login_text\":\"Click the image below to login using Shibboleth\",\"login_image\":\"https:\/\/wiki.shibboleth.net\/confluence\/download\/attachments\/131074\/atl.site.logo?version=2&modificationDate=1502412080059&api=v2\",\"login_url\":\"\"}]}');
+";
+
+// If db is using UTF8 instead of UTF8MB4, then remove MB4 from SQL
+print SQLTableCheck::filterSqlCollation($sql);
